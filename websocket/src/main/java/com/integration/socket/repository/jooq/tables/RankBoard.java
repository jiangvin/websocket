/*
 * This file is generated by jOOQ.
 */
package com.integration.socket.repository.jooq.tables;


import com.integration.socket.repository.jooq.DefaultSchema;
import com.integration.socket.repository.jooq.Indexes;
import com.integration.socket.repository.jooq.Keys;
import com.integration.socket.repository.jooq.tables.records.RankBoardRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RankBoard extends TableImpl<RankBoardRecord> {

    private static final long serialVersionUID = 1776584693;

    /**
     * The reference instance of <code>rank_board</code>
     */
    public static final RankBoard RANK_BOARD = new RankBoard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RankBoardRecord> getRecordType() {
        return RankBoardRecord.class;
    }

    /**
     * The column <code>rank_board.id</code>.
     */
    public final TableField<RankBoardRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rank_board.rank</code>.
     */
    public final TableField<RankBoardRecord, Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rank_board.score</code>.
     */
    public final TableField<RankBoardRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rank_board.user_id</code>.
     */
    public final TableField<RankBoardRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>rank_board.username</code>.
     */
    public final TableField<RankBoardRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>rank_board.game_type</code>.
     */
    public final TableField<RankBoardRecord, Integer> GAME_TYPE = createField("game_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rank_board.create_time</code>.
     */
    public final TableField<RankBoardRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>rank_board</code> table reference
     */
    public RankBoard() {
        this(DSL.name("rank_board"), null);
    }

    /**
     * Create an aliased <code>rank_board</code> table reference
     */
    public RankBoard(String alias) {
        this(DSL.name(alias), RANK_BOARD);
    }

    /**
     * Create an aliased <code>rank_board</code> table reference
     */
    public RankBoard(Name alias) {
        this(alias, RANK_BOARD);
    }

    private RankBoard(Name alias, Table<RankBoardRecord> aliased) {
        this(alias, aliased, null);
    }

    private RankBoard(Name alias, Table<RankBoardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RankBoard(Table<O> child, ForeignKey<O, RankBoardRecord> key) {
        super(child, key, RANK_BOARD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RANK_BOARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RankBoardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RANK_BOARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RankBoardRecord> getPrimaryKey() {
        return Keys.KEY_RANK_BOARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RankBoardRecord>> getKeys() {
        return Arrays.<UniqueKey<RankBoardRecord>>asList(Keys.KEY_RANK_BOARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RankBoard as(String alias) {
        return new RankBoard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RankBoard as(Name alias) {
        return new RankBoard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RankBoard rename(String name) {
        return new RankBoard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RankBoard rename(Name name) {
        return new RankBoard(name, null);
    }
}
