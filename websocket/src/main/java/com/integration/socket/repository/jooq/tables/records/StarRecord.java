/*
 * This file is generated by jOOQ.
 */
package com.integration.socket.repository.jooq.tables.records;


import com.integration.socket.repository.jooq.tables.Star;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StarRecord extends UpdatableRecordImpl<StarRecord> implements Record7<String, Integer, Integer, Boolean, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = 603325656;

    /**
     * Setter for <code>star.user_id</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>star.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>star.map_id</code>.
     */
    public void setMapId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>star.map_id</code>.
     */
    public Integer getMapId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>star.sub_id</code>.
     */
    public void setSubId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>star.sub_id</code>.
     */
    public Integer getSubId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>star.hard_mode</code>.
     */
    public void setHardMode(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>star.hard_mode</code>.
     */
    public Boolean getHardMode() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>star.star</code>.
     */
    public void setStar(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>star.star</code>.
     */
    public Integer getStar() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>star.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>star.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>star.update_time</code>.
     */
    public void setUpdateTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>star.update_time</code>.
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record4<String, Integer, Integer, Boolean> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Integer, Integer, Boolean, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, Integer, Integer, Boolean, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Star.STAR.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Star.STAR.MAP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Star.STAR.SUB_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Star.STAR.HARD_MODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Star.STAR.STAR_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Star.STAR.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Star.STAR.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSubId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getHardMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getStar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSubId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getHardMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getStar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value1(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value2(Integer value) {
        setMapId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value3(Integer value) {
        setSubId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value4(Boolean value) {
        setHardMode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value5(Integer value) {
        setStar(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value6(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord value7(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StarRecord values(String value1, Integer value2, Integer value3, Boolean value4, Integer value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StarRecord
     */
    public StarRecord() {
        super(Star.STAR);
    }

    /**
     * Create a detached, initialised StarRecord
     */
    public StarRecord(String userId, Integer mapId, Integer subId, Boolean hardMode, Integer star, Timestamp createTime, Timestamp updateTime) {
        super(Star.STAR);

        set(0, userId);
        set(1, mapId);
        set(2, subId);
        set(3, hardMode);
        set(4, star);
        set(5, createTime);
        set(6, updateTime);
    }
}
