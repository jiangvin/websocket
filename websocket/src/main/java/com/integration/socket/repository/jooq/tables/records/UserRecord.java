/*
 * This file is generated by jOOQ.
 */
package com.integration.socket.repository.jooq.tables.records;


import com.integration.socket.repository.jooq.tables.User;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record16<String, String, String, Timestamp, Timestamp, Integer, Timestamp, Timestamp, Timestamp, String, String, Timestamp, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -949760238;

    /**
     * Setter for <code>user.user_id</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>user.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>user.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.user_device</code>.
     */
    public void setUserDevice(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>user.user_device</code>.
     */
    public String getUserDevice() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>user.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>user.last_login_time</code>.
     */
    public void setLastLoginTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>user.last_login_time</code>.
     */
    public Timestamp getLastLoginTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>user.coin</code>.
     */
    public void setCoin(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>user.coin</code>.
     */
    public Integer getCoin() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>user.ghost_expired</code>.
     */
    public void setGhostExpired(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>user.ghost_expired</code>.
     */
    public Timestamp getGhostExpired() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>user.clock_expired</code>.
     */
    public void setClockExpired(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>user.clock_expired</code>.
     */
    public Timestamp getClockExpired() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>user.red_star_expired</code>.
     */
    public void setRedStarExpired(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>user.red_star_expired</code>.
     */
    public Timestamp getRedStarExpired() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>user.tank_type</code>.
     */
    public void setTankType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>user.tank_type</code>.
     */
    public String getTankType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>user.skin_type</code>.
     */
    public void setSkinType(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>user.skin_type</code>.
     */
    public String getSkinType() {
        return (String) get(10);
    }

    /**
     * Setter for <code>user.tank_type_expired</code>.
     */
    public void setTankTypeExpired(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>user.tank_type_expired</code>.
     */
    public Timestamp getTankTypeExpired() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>user.single_game_times</code>.
     */
    public void setSingleGameTimes(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>user.single_game_times</code>.
     */
    public Integer getSingleGameTimes() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>user.net_game_times</code>.
     */
    public void setNetGameTimes(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>user.net_game_times</code>.
     */
    public Integer getNetGameTimes() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>user.stage</code>.
     */
    public void setStage(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>user.stage</code>.
     */
    public Integer getStage() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>user.hard_stage</code>.
     */
    public void setHardStage(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>user.hard_stage</code>.
     */
    public Integer getHardStage() {
        return (Integer) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<String, String, String, Timestamp, Timestamp, Integer, Timestamp, Timestamp, Timestamp, String, String, Timestamp, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<String, String, String, Timestamp, Timestamp, Integer, Timestamp, Timestamp, Timestamp, String, String, Timestamp, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return User.USER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return User.USER.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return User.USER.USER_DEVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return User.USER.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return User.USER.LAST_LOGIN_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return User.USER.COIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return User.USER.GHOST_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return User.USER.CLOCK_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return User.USER.RED_STAR_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return User.USER.TANK_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return User.USER.SKIN_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return User.USER.TANK_TYPE_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return User.USER.SINGLE_GAME_TIMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return User.USER.NET_GAME_TIMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return User.USER.STAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field16() {
        return User.USER.HARD_STAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getUserDevice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getLastLoginTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getCoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getGhostExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getClockExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getRedStarExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getTankType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getSkinType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getTankTypeExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getSingleGameTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component14() {
        return getNetGameTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getStage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component16() {
        return getHardStage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUserDevice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastLoginTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getCoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getGhostExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getClockExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getRedStarExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getTankType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getSkinType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getTankTypeExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getSingleGameTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getNetGameTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getStage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value16() {
        return getHardStage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(String value) {
        setUserDevice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value5(Timestamp value) {
        setLastLoginTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value6(Integer value) {
        setCoin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value7(Timestamp value) {
        setGhostExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value8(Timestamp value) {
        setClockExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value9(Timestamp value) {
        setRedStarExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value10(String value) {
        setTankType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value11(String value) {
        setSkinType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value12(Timestamp value) {
        setTankTypeExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value13(Integer value) {
        setSingleGameTimes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value14(Integer value) {
        setNetGameTimes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value15(Integer value) {
        setStage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value16(Integer value) {
        setHardStage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(String value1, String value2, String value3, Timestamp value4, Timestamp value5, Integer value6, Timestamp value7, Timestamp value8, Timestamp value9, String value10, String value11, Timestamp value12, Integer value13, Integer value14, Integer value15, Integer value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String userId, String username, String userDevice, Timestamp createTime, Timestamp lastLoginTime, Integer coin, Timestamp ghostExpired, Timestamp clockExpired, Timestamp redStarExpired, String tankType, String skinType, Timestamp tankTypeExpired, Integer singleGameTimes, Integer netGameTimes, Integer stage, Integer hardStage) {
        super(User.USER);

        set(0, userId);
        set(1, username);
        set(2, userDevice);
        set(3, createTime);
        set(4, lastLoginTime);
        set(5, coin);
        set(6, ghostExpired);
        set(7, clockExpired);
        set(8, redStarExpired);
        set(9, tankType);
        set(10, skinType);
        set(11, tankTypeExpired);
        set(12, singleGameTimes);
        set(13, netGameTimes);
        set(14, stage);
        set(15, hardStage);
    }
}
