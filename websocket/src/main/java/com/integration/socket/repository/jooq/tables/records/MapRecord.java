/*
 * This file is generated by jOOQ.
 */
package com.integration.socket.repository.jooq.tables.records;


import com.integration.socket.repository.jooq.tables.Map;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MapRecord extends UpdatableRecordImpl<MapRecord> implements Record8<Integer, String, Integer, Integer, String, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = 2136540619;

    /**
     * Setter for <code>map.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>map.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>map.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>map.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>map.width</code>.
     */
    public void setWidth(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>map.width</code>.
     */
    public Integer getWidth() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>map.height</code>.
     */
    public void setHeight(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>map.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>map.data</code>.
     */
    public void setData(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>map.data</code>.
     */
    public String getData() {
        return (String) get(4);
    }

    /**
     * Setter for <code>map.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>map.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>map.update_time</code>.
     */
    public void setUpdateTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>map.update_time</code>.
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>map.secret</code>.
     */
    public void setSecret(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>map.secret</code>.
     */
    public String getSecret() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Integer, Integer, String, Timestamp, Timestamp, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Integer, Integer, String, Timestamp, Timestamp, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Map.MAP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Map.MAP.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Map.MAP.WIDTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Map.MAP.HEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Map.MAP.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Map.MAP.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Map.MAP.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Map.MAP.SECRET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSecret();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSecret();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value3(Integer value) {
        setWidth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value4(Integer value) {
        setHeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value5(String value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value6(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value7(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord value8(String value) {
        setSecret(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5, Timestamp value6, Timestamp value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MapRecord
     */
    public MapRecord() {
        super(Map.MAP);
    }

    /**
     * Create a detached, initialised MapRecord
     */
    public MapRecord(Integer id, String name, Integer width, Integer height, String data, Timestamp createTime, Timestamp updateTime, String secret) {
        super(Map.MAP);

        set(0, id);
        set(1, name);
        set(2, width);
        set(3, height);
        set(4, data);
        set(5, createTime);
        set(6, updateTime);
        set(7, secret);
    }
}
